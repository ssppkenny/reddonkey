{"version":3,"sources":["re_pressed/core.cljs"],"mappings":";AAQA,yDAAA,zDAACA,wLAMA,aAAAC,FAAKS;AAAL,AAAA,IAAAR,aAAAD;IAAAE,aAAA,AAAAC,cAAAF;IAAAG,eAAA,AAAAC,gBAAAH;IAAAA,iBAAA,AAAAI,eAAAJ;YAAAE,RAAQK;IAARL,mBAAA,AAAAC,gBAAAH;IAAAA,iBAAA,AAAAI,eAAAJ;iBAAAE,bAAUM;IAAVH,aAAAL;IAAAK,iBAAA,AAAAC,4BAAAD;eAAAA,XAA4BI;AAA5B,AAAA,kDAAA,uGAAA,2CAAA,2EAAA,XACiCD,2EAAsBC;;AAGxD,yDAAA,zDAACZ,qKAEA,WAAAa,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAN,4BAAAM;SAAA,AAAAC,4CAAAD,eAAA,hEAAaK;IAAbH,aAAAH;QAAA,AAAAI,4CAAAD,WAAA,IAAA,/DACMP;IADNS,aAAA,AAAAD,4CAAAD,WAAA,IAAA;IAAAE,iBAAA,AAAAV,4BAAAU;WAAAA,PAKeM;iBALf,AAAAT,4CAAAG,eAAA,xEACgBE;iBADhB,AAAAL,4CAAAG,eAAA,xEAEgBG;yBAFhB,AAAAN,4CAAAG,eAAA,hFAGgBI;2BAHhB,AAAAP,4CAAAG,eAAA,lFAIgBK;AAJhB,AAAA,kDAAA,+IAMWJ,nBACA,sBAAA,mFAAA,yFAAA,6DAAA,/PAACM,nBACD,wRAAA,mFAAA,yFAAA,pcAACA,6gBAAiCL,hiBAClC,4iBAAA,mFAAA,yFAAA,xtBAACK,kyBAAiCJ,rzBAClC,i0BAAA,mFAAA,yFAAA,7+BAACI,qkCAAyCH,xlCAC1C,4mCAAA,mFAAA,yFAAA,xxCAACG,q3CAA2CF;;AAIxD,yDAAA,zDAACxB,uKAEA,WAAA2B,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAApB,4BAAAoB;SAAA,AAAAb,4CAAAa,eAAA,hEAAaT;IAAbU,aAAAF;QAAA,AAAAV,4CAAAY,WAAA,IAAA,/DACMpB;IADNqB,aAAA,AAAAb,4CAAAY,WAAA,IAAA;IAAAC,iBAAA,AAAAtB,4BAAAsB;WAAAA,PAIeN;iBAJf,AAAAT,4CAAAe,eAAA,xEACgBV;iBADhB,AAAAL,4CAAAe,eAAA,xEAEgBT;yBAFhB,AAAAN,4CAAAe,eAAA,hFAGgBR;AAHhB,AAAA,kDAAA,4HAKWH,nBACA,sBAAA,mFAAA,0FAAA,6DAAA,hQAACM,nBACD,yRAAA,mFAAA,0FAAA,tcAACA,+gBAAkCL,liBACnC,8iBAAA,mFAAA,0FAAA,3tBAACK,qyBAAkCJ,xzBACnC,o0BAAA,mFAAA,0FAAA,j/BAACI,ykCAA0CH;;AAIvD,yDAAA,zDAACvB,gKAEA,WAAAgC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAzB,4BAAAyB;SAAA,AAAAlB,4CAAAkB,eAAA,hEAAad;IAAbe,aAAAF;QAAA,AAAAf,4CAAAiB,WAAA,IAAA,/DACMzB;IADN0B,aAAA,AAAAlB,4CAAAiB,WAAA,IAAA;IAAAC,iBAAA,AAAA3B,4BAAA2B;WAAAA,PAIeX;iBAJf,AAAAT,4CAAAoB,eAAA,xEACgBf;iBADhB,AAAAL,4CAAAoB,eAAA,xEAEgBd;yBAFhB,AAAAN,4CAAAoB,eAAA,hFAGgBb;AAHhB,AAAA,kDAAA,4HAKWH,nBACA,sBAAA,mFAAA,oFAAA,6DAAA,1PAACM,nBACD,mRAAA,mFAAA,oFAAA,1bAACA,mgBAA+BL,thBAChC,kiBAAA,mFAAA,oFAAA,zsBAACK,mxBAA+BJ,tyBAChC,kzBAAA,mFAAA,oFAAA,z9BAACI,ijCAAuCH","names":["re_frame.core.reg_event_fx","p__24444","vec__24445","seq__24446","cljs.core/seq","first__24447","cljs.core/first","cljs.core/next","map__24448","cljs.core/--destructure-map","_","event-type","args-map","p__24449","p__24450","map__24451","cljs.core.get","vec__24452","cljs.core.nth","map__24455","db","event-keys","clear-keys","always-listen-keys","prevent-default-keys","opts","cljs.core/assoc-in","p__24456","p__24457","map__24458","vec__24459","map__24462","p__24463","p__24464","map__24465","vec__24466","map__24469"],"sourcesContent":["(ns re-pressed.core\n  (:require\n   [re-frame.core :as rf]\n   [re-pressed.impl]\n   ))\n\n\n\n(rf/reg-event-fx\n ::add-keyboard-event-listener\n ;; event-type can be:\n ;; \"keydown\",\n ;; \"keypress\", or\n ;; \"keyup\"\n (fn [_ [_ event-type & {:as args-map}]]\n   {::keyboard-event {:event-type event-type :arguments args-map}}))\n\n\n(rf/reg-event-fx\n ::set-keydown-rules\n (fn [{:keys [db]}\n      [_ {:keys [event-keys\n                 clear-keys\n                 always-listen-keys\n                 prevent-default-keys]\n          :as   opts}]]\n   {:db (-> db\n            (assoc-in [::keydown :keys] nil)\n            (assoc-in [::keydown :event-keys] event-keys)\n            (assoc-in [::keydown :clear-keys] clear-keys)\n            (assoc-in [::keydown :always-listen-keys] always-listen-keys)\n            (assoc-in [::keydown :prevent-default-keys] prevent-default-keys)\n            )}))\n\n\n(rf/reg-event-fx\n ::set-keypress-rules\n (fn [{:keys [db]}\n      [_ {:keys [event-keys\n                 clear-keys\n                 always-listen-keys]\n          :as   opts}]]\n   {:db (-> db\n            (assoc-in [::keypress :keys] nil)\n            (assoc-in [::keypress :event-keys] event-keys)\n            (assoc-in [::keypress :clear-keys] clear-keys)\n            (assoc-in [::keypress :always-listen-keys] always-listen-keys)\n            )}))\n\n\n(rf/reg-event-fx\n ::set-keyup-rules\n (fn [{:keys [db]}\n      [_ {:keys [event-keys\n                 clear-keys\n                 always-listen-keys]\n          :as   opts}]]\n   {:db (-> db\n            (assoc-in [::keyup :keys] nil)\n            (assoc-in [::keyup :event-keys] event-keys)\n            (assoc-in [::keyup :clear-keys] clear-keys)\n            (assoc-in [::keyup :always-listen-keys] always-listen-keys)\n            )}))\n"],"x_google_ignoreList":[0]}